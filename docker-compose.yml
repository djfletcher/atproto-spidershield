version: '3.8'

services:
  flask-app:
    image: flask-app:latest
    ports:
      - 5001:5000
    depends_on:
      - kafka
    restart: always
    environment:
      - KAFKA_VERSION=${KAFKA_VERSION}
      - KAFKA_BROKER=kafka:${KAFKA_PORT}
      - SUBSCRIBE_LABELS_CURSOR_MAX_ALLOWED_LOOKBACK=${SUBSCRIBE_LABELS_CURSOR_MAX_ALLOWED_LOOKBACK}
      - POST_LABELS_TOPIC=${POST_LABELS_TOPIC}

  firehose-ingest:
    image: firehose-ingest:latest
    depends_on:
      - kafka
    environment:
      # TODO: move this to secrets
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - KAFKA_VERSION=${KAFKA_VERSION}
      - KAFKA_BROKER=kafka:${KAFKA_PORT}
      - POST_LABELS_TOPIC=${POST_LABELS_TOPIC}
      - IMAGE_LABELS_TOPIC=${IMAGE_LABELS_TOPIC}

  kafka:
    image: bitnami/kafka:latest
    ports:
      - ${KAFKA_PORT}:${KAFKA_PORT}
    environment:
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:${KAFKA_PORT},EXTERNAL://localhost:9094
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # TODO: update security protocol
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:${KAFKA_PORT},CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
    volumes:
      - kafka_data:/bitnami

volumes:
  redis_data:
    driver: local
  kafka_data:
    driver: local
